name: Check GraphQL
description: Checks your GraphQL endpoint for problems
author: 'Dylan Anthony'
branding:
  icon: check-circle
  color: purple
inputs:
  endpoint:
    description: 'The GraphQL endpoint to check'
    required: true
  auth:
    description: 'The Authorization header to use'
    required: false
    default: ''
  subgraph:
    description: 'Whether the graph is a subgraph'
    required: false
    default: 'false'
  allow_introspection:
    description: 'Whether introspection is allowed, defaults to value of `subgraph`'
    required: false
    default: ''
  insecure_subgraph:
    description: 'Whether the subgraph is allowed to be insecure'
    required: false
    default: 'false'
  token:
    description: 'The GitHub token to use for downloading the action, defaults to workflow token'
    required: true
    default: ${{ github.token }}
outputs:
  error:
    description: 'The description of any error that occurred'
    value: ${{ steps.run.outputs.error }}
runs:
  using: 'composite'
  steps:
    - name: Set reusable variables
      shell: bash
      run: |
        echo "action_repo=graphql-check-action" >> $GITHUB_ENV
        echo "action_org=dbanty" >> $GITHUB_ENV
        echo "binary_name=graphql-check-action" >> $GITHUB_ENV

    - name: Add binary extension
      shell: bash
      if: runner.os == 'Windows'
      run: echo "binary_name=${{ env.binary_name }}.exe" >> $GITHUB_ENV

    - name: Get Action Version
      id: get_action_version
      shell: pwsh
      run: |
        $finalComponent = Split-Path -Leaf ${{ github.action_path }}
        if ($finalComponent -eq "${{ env.action_name }}") {
          $version = ""
        } else {
          $version = $finalComponent
        }
        Write-Output "version=$version" >> $Env:GITHUB_OUTPUT

    - name: Download Action
      shell: bash
      run: |
        gh release download ${{ steps.get_action_version.outputs.version }} --repo ${{ env.action_org }}/${{ env.action_repo }} --pattern '${{ runner.os }}.tgz'
        tar -xzf ${{ runner.os }}.tgz
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
    - name: Run Action
      shell: bash
      id: run
      run: ./${{ runner.os }}/${{ env.binary_name }} "${{ inputs.endpoint }}" "${{ inputs.auth }}" "${{ inputs.subgraph }}" "${{ inputs.allow_introspection }}" "${{ inputs.insecure_subgraph }}"
